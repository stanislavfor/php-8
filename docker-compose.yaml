# # версия синтаксиса
# version: '3'

# # в этом блоке мы описываем контейнеры, которые будут запускаться
# services:
#   #контейнер с Nginx
#   nginx:
#     build:
#       context: ./nginx
#       dockerfile: Dockerfile
#     image: myapp/nginx
#     container_name: webserver
#     # проброс портов
#     ports:
#       - "80:80"
#     volumes:
#        - ./code:/data/mysite.local
#     networks:
#       - app-network

#   #Контейнер с PHP-FPM, назовём его app
#   application:
#     # Если нет секции build, то система будет искать образ в репозиториях
#     build:
#       context: ./fpm
#       dockerfile: Dockerfile
#     image: myapp/php # имя будущего образа
#     container_name: application # имя контейнера после запуска
#     volumes:
#        - ./code:/data/mysite.local
#     # мы можем создать для контейнеров внутреннюю сеть
#     networks:
#       - app-network

#    #Контейнер с PHP-FPM, назовём его app
#   cli:
#     # Если нет секции build, то система будет искать образ в репозиториях
#     build:
#       context: ./cli
#       dockerfile: Dockerfile
#     image: myapp/php-cli # имя будущего образа
#     container_name: cli # имя контейнера после запуска
#     volumes:
#        - ./code:/data/mysite.local
#     # мы можем создать для контейнеров внутреннюю сеть
#     networks:
#       - app-network

#   #Контейнер с БД
#   database:
#     image: mysql:5.7
#     container_name: database # имя контейнера после запуска
#     environment:
#       MYSQL_DATABASE: ${DB_NAME} # имя нашей БД
#       MYSQL_USER: ${DB_USER} # имя пользователя, с которым будет подключаться 
#       MYSQL_PASSWORD: ${DB_PASSWORD} # пароль для пользователя
#       MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD} # администраторский пароль
#     ports:
#       - "3306:3306"
#     volumes:
#         - ./db:/var/lib/mysql
#     # мы можем создать для контейнеров внутреннюю сеть
#     networks:
#       - app-network

# #Docker Networks
# networks:
#   app-network:
#     driver: bridge

# Описание контейнеров
services:
  # Контейнер с Nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    ports:
      - "80:80"
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network

  # Контейнер с PHP-FPM
  application:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: application
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network

  # Контейнер с PHP-CLI
  cli:
    build:
      context: ./cli
      dockerfile: Dockerfile
    image: myapp/php-cli
    container_name: cli
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network

  # Контейнер с БД
  database:
    image: mysql:5.7
    container_name: database
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./db:/var/lib/mysql
    networks:
      - app-network

# Описание сетей
networks:
  app-network:
    driver: bridge
